import Head from "next/head";
import { useEffect, useState } from "react";

export default function Home({ channels }) {
  const [randomizer, setRandomizer] = useState(0);
  // Removes hololive English Channel and sub channels
  const data = channels.filter(
    (elem) =>
      elem.english_name &&
      !elem.english_name.includes("(Sub)") &&
      !elem.english_name.includes("Sub Channel")
  );

  // Handles checkbox change on click
  const handleChange = (ev) => {
    const isChecked = ev.target.checked;

    cbVerification(isChecked);
  };

  const cbVerification = (cbIsChecked) => {
    // If box is checked, add 1
    if (cbIsChecked) {
      setRandomizer(randomizer + 1);
    }
    // If box is unchecked, remove 1
    if (!cbIsChecked && randomizer > 0) {
      setRandomizer(randomizer - 1);
    }
  };

  // Displays randomizer variable in console
  useEffect(() => {
    console.info(randomizer);
  }, [randomizer]);

  return (
    <div className="px-4 md:px-8">
      <Head>
        <title>holomem randomizer</title>
        <meta name="description" content="Generated by create next app" />
        <meta property="og:site_name" content="holomem randomizer"></meta>
      </Head>

      <main className="py-6 flex flex-col justify-center items-center">
        <h1 className="text-4xl md:text-6xl mb-6">Randomizer</h1>
        <form>
          {/* Checkbox container */}
          <div className="mb-4">
            <ul className="flex flex-wrap justify-center">
              {/* One checkbox for each holomem */}
              {data.map((streamer, index) => (
                <li className="mr-5 last:mr-0" key={index}>
                  <input
                    type="checkbox"
                    className="mr-2"
                    id={`chb${index}`}
                    name={streamer.english_name
                      .toLowerCase()
                      .split(" ")
                      .join("_")}
                    defaultChecked={false}
                    onChange={(ev) => handleChange(ev)}
                  />
                  <label
                    htmlFor={streamer.english_name
                      .toLowerCase()
                      .split(" ")
                      .join("_")}
                  >
                    {streamer.english_name}
                  </label>
                </li>
              ))}
            </ul>
          </div>

          {/* Choose button */}
          <div className="flex justify-center">
            {randomizer > 1 && (
              <button
                type="submit"
                className="transition ease-in-out duration-200 bg-blue-800 hover:bg-blue-700 text-white text-base font-semibold py-2.5 px-6 rounded-3xl cursor-pointer"
                name="submit"
                onClick={(ev) => ev.preventDefault()}
              >
                Choose
              </button>
            )}
          </div>
        </form>
      </main>
    </div>
  );
}

export async function getStaticProps() {
  const twoMonths = Math.ceil(30.417 * 2 * 24 * 60 * 60 * 1);

  // Calls Holodex's API endpoint to get hololive members
  const res = await fetch(
    "https://holodex.net/api/v2/channels?org=Hololive&limit=100&sort=suborg&offset=4&type=vtuber"
  );
  const channels = await res.json();

  // By returning { props: { channels } }, the component
  // will receive `channels` as a prop at build time
  return {
    props: {
      channels,
    },
    revalidate: twoMonths, // ISR
  };
}
