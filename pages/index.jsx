import Head from "next/head";
import { useEffect, useRef, useState } from "react";

export default function Home({ channels }) {
  const [randomizer, setRandomizer] = useState(0);
  const formRef = useRef();

  // Removes hololive English Channel and sub channels
  const data = channels.filter(
    (elem) =>
      elem.english_name &&
      !elem.english_name.includes("(Sub)") &&
      !elem.english_name.includes("Sub Channel")
  );

  // Sorts by generation
  const gen0 = data.filter(
    (holomem) => holomem.group === "" && holomem.english_name !== "IRyS"
  );
  const gen1 = data.filter((holomem) => holomem.group === "1st Generation");
  const gen2 = data.filter((holomem) => holomem.group === "2nd Generation");
  const gamers = data.filter((holomem) => holomem.group === "GAMERS");
  const gen3 = data.filter((holomem) => holomem.group === "3rd Generation");
  const gen4 = data.filter((holomem) => holomem.group === "4th Generation");
  const gen5 = data.filter((holomem) => holomem.group === "5th Generation");
  const gen6 = data.filter(
    (holomem) => holomem.group === "6th Generation (HoloX)"
  );

  const holoMyth = data.filter((holomem) => holomem.group === "English (Myth)");
  const projectHope = data.filter((holomem) => holomem.english_name === "IRyS");
  const holoCouncil = data.filter(
    (holomem) => holomem.group === "English (Council)"
  );

  const gen1ID = data.filter(
    (holomem) => holomem.group === "Indonesia 1st Gen"
  );
  const gen2ID = data.filter(
    (holomem) => holomem.group === "Indonesia 2nd Gen"
  );
  const gen3ID = data.filter(
    (holomem) => holomem.group === "Indonesia 3rd Gen"
  );

  const gen1Stars = data.filter(
    (holomem) => holomem.group === "Holostars 1st Gen"
  );
  const gen2Stars = data.filter(
    (holomem) => holomem.group === "Holostars 2nd Gen"
  );
  const gen3Stars = data.filter(
    (holomem) => holomem.group === "Holostars 3rd Gen"
  );
  const uproar = data.filter((holomem) => holomem.group === "Holostars UPROAR");

  const inactive = data.filter((holomem) => holomem.group === "INACTIVE");

  // Handles checkbox change on click
  const handleChange = (ev) => {
    const isChecked = ev.target.checked;

    cbVerification(isChecked);

    // test
    // console.dir(formRef.current);
  };

  // Handles form submit
  const handleSubmit = (ev) => {
    ev.preventDefault();

    console.log(formRef.current);
  };

  const cbVerification = (cbIsChecked) => {
    // If box is checked, add 1
    if (cbIsChecked) {
      setRandomizer(randomizer + 1);
    }
    // If box is unchecked, remove 1
    if (!cbIsChecked && randomizer > 0) {
      setRandomizer(randomizer - 1);
    }
  };

  // Displays randomizer variable in console
  useEffect(() => {
    console.info(randomizer);
  }, [randomizer]);

  return (
    <div className="px-4 md:px-8">
      <Head>
        <title>holomem randomizer</title>
        <meta name="description" content="Generated by create next app" />
        <meta property="og:site_name" content="holomem randomizer"></meta>
      </Head>

      <main className="py-6 flex flex-col justify-center items-center">
        <h1 className="text-4xl md:text-6xl mb-6">Randomizer</h1>
        <form
          ref={formRef}
          onSubmit={handleSubmit}
          className="flex flex-col gap-y-4"
        >
          {/* Checkbox container */}
          <div className="">
            <ul className="flex flex-wrap justify-center flex-col gap-y-2">
              {/* Generation 0 */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  Generation 0
                </legend>
                {/* One checkbox for each holomem */}
                {gen0.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>
              {/* 1st Generation */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  1st Generation
                </legend>
                {/* One checkbox for each holomem */}
                {gen1.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>
              {/* 2nd Generation */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  2nd Generation
                </legend>
                {/* One checkbox for each holomem */}
                {gen2.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>
              {/* GAMERS */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  GAMERS
                </legend>
                {/* One checkbox for each holomem */}
                {gamers.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>
              {/* 3rd Generation */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  3rd Generation
                </legend>
                {/* One checkbox for each holomem */}
                {gen3.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>
              {/* 4th Generation */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  4th Generation
                </legend>
                {/* One checkbox for each holomem */}
                {gen4.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>
              {/* 5th Generation */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  5th Generation
                </legend>
                {/* One checkbox for each holomem */}
                {gen5.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>
              {/* 6th Generation */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  6th Generation
                </legend>
                {/* One checkbox for each holomem */}
                {gen6.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>

              {/* Myth */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  holoMyth
                </legend>
                {/* One checkbox for each holomem */}
                {holoMyth.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>
              {/* Project: HOPE */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  Project: HOPE
                </legend>
                {/* One checkbox for each holomem */}
                {projectHope.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>
              {/* Council */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  holoCouncil
                </legend>
                {/* One checkbox for each holomem */}
                {holoCouncil.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>

              {/* ID 1st Generation */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  holoID1
                </legend>
                {/* One checkbox for each holomem */}
                {gen1ID.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>
              {/* ID 2nd Generation */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  holoID2
                </legend>
                {/* One checkbox for each holomem */}
                {gen2ID.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>
              {/* ID 3rd Generation */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  holoID3
                </legend>
                {/* One checkbox for each holomem */}
                {gen3ID.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>

              {/* holostars 1st Generation */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  holostars 1st Generation
                </legend>
                {/* One checkbox for each holomem */}
                {gen1Stars.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>
              {/* holostars 2nd Generation */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  holostars 2nd Generation
                </legend>
                {/* One checkbox for each holomem */}
                {gen2Stars.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>
              {/* holostars 3rd Generation */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  holostars 3rd Generation
                </legend>
                {/* One checkbox for each holomem */}
                {gen3Stars.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>
              {/* UPROAR!! */}
              <fieldset className="flex">
                <legend className="bg-sky-800 text-white font-semibold py-1 px-1.5">
                  UPROAR!!
                </legend>
                {/* One checkbox for each holomem */}
                {uproar.map((streamer, index) => (
                  <li className="mr-5 last:mr-0" key={index}>
                    <input
                      type="checkbox"
                      className="mr-2"
                      id={streamer.english_name.split(" ").join("_")}
                      name={streamer.english_name.split(" ").join("_")}
                      defaultChecked={false}
                      onChange={(ev) => handleChange(ev)}
                    />
                    <label
                      htmlFor={streamer.english_name
                        .toLowerCase()
                        .split(" ")
                        .join("_")}
                    >
                      {streamer.english_name}
                    </label>
                  </li>
                ))}
              </fieldset>
            </ul>
          </div>

          {/* Choose button */}
          <div className="flex justify-center">
            {randomizer > 1 && (
              <button
                type="submit"
                className="transition ease-in-out duration-200 bg-blue-800 hover:bg-blue-700 text-white text-base font-semibold py-2.5 px-6 rounded-3xl cursor-pointer"
                name="submit"
                onClick={() => console.log("Submit button clicked")}
              >
                Choose
              </button>
            )}
          </div>
        </form>
      </main>
    </div>
  );
}

export async function getStaticProps() {
  const twoMonths = Math.ceil(30.417 * 2 * 24 * 60 * 60 * 1);

  // Calls Holodex's API endpoint to get hololive members
  const res = await fetch(
    "https://holodex.net/api/v2/channels?org=Hololive&limit=100&sort=suborg&offset=4&type=vtuber"
  );
  const channels = await res.json();

  // By returning { props: { channels } }, the component
  // will receive `channels` as a prop at build time
  return {
    props: {
      channels,
    },
    revalidate: twoMonths, // ISR
  };
}
