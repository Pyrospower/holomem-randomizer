import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.scss";

export default function Home({ channels }) {
  // Removes hololive English Channel and sub channels
  const data = channels.filter(
    (elem) =>
      elem.english_name &&
      !elem.english_name.includes("(Sub)") &&
      !elem.english_name.includes("Sub Channel")
  );

  return (
    <div className={styles.container}>
      <Head>
        <title>holomem randomizer</title>
        <meta name="description" content="Generated by create next app" />
        <meta property="og:site_name" content="holomem randomizer"></meta>
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Randomizer</h1>
        <form className={styles.formCheckbox}>
          <div className={styles.checkboxContainer}>
            <ul>
              {data.map((streamer) => (
                <li key={streamer.id}>
                  <input
                    type="checkbox"
                    className={styles.checkNames}
                    id={streamer.id}
                    name={streamer.english_name}
                    value={streamer.english_name}
                  />
                  <label htmlFor={streamer.english_name}>
                    {streamer.english_name}
                  </label>
                </li>
              ))}
            </ul>
          </div>
        </form>
      </main>
    </div>
  );
}

export async function getStaticProps() {
  // Calls Holodex's API endpoint to get hololive members
  const res = await fetch(
    "https://holodex.net/api/v2/channels?org=Hololive&limit=100&sort=suborg&offset=4&type=vtuber"
  );
  const channels = await res.json();

  // By returning { props: { channels } }, the component
  // will receive `data` as a prop at build time
  return {
    props: {
      channels,
    },
  };
}
